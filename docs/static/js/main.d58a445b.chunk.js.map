{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","useFetchGifs","key","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"6MAKaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEVC,mBAAS,IAFC,mBAEvCC,EAFuC,KAE3BC,EAF2B,KAkB9C,OAEI,0BAAMC,SAZW,SAACC,GAElBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAe,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACvCN,EAAc,OAOd,2BACIO,KAAK,OACLC,MAAQT,EACRU,SApBc,SAAEP,GACxBF,EAAeE,EAAEQ,OAAOF,Y,uBCPnBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEbC,EAFa,iDAEoCC,UAAUH,GAF9C,+DAGAI,MAAOF,GAHP,cAGbG,EAHa,gBAIIA,EAAKC,OAJT,uBAIXC,EAJW,EAIXA,KAEFC,EAAOD,EAAKE,KAAK,SAAAC,GAAS,IAAD,EAC3B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVvB,kBAcZM,GAdY,4CAAH,sDCAPO,EAAc,SAAC,GAAmB,IAAjBH,EAAgB,EAAhBA,MAAMV,EAAU,EAAVA,IAKhC,OACI,yBAAKc,UAAU,0CACX,yBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,2BAAIA,KCPHO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,ECAb,SAAEA,GAAe,IAAD,EAEdd,mBAAS,CAC/BqB,KAAM,GACNa,SAAQ,IAJ4B,mBAEjCC,EAFiC,KAE1BC,EAF0B,KAuBxC,OAhBAC,qBAAW,WAEPxB,EAASC,GAEJwB,MAAM,SAAAd,GAEHY,EAAS,CACLf,KAAMG,EACNU,SAAQ,SAKtB,CAACpB,IAGIqB,EDpB0BI,CAAczB,GAAlCa,EAHwB,EAG7BN,KAAaa,EAHgB,EAGhBA,QAErB,OACI,oCACI,wBAAIJ,UAAU,qCAAd,IAAqDhB,EAArD,KAEEoB,GAAW,uBAAGJ,UAAU,2BAAb,cAEb,yBAAKA,UAAU,aAEPH,EAAOJ,KAAK,SAAAC,GAAG,OACX,kBAAC,EAAD,iBACIA,EADJ,CAEAgB,IAAKhB,EAAIC,YEhBpBgB,EAAe,WAAO,IAAD,EAEMzC,mBAAS,CAAC,cAFhB,mBAEvB0C,EAFuB,KAEX3C,EAFW,KAS9B,OACI,oCACI,8CAEA,kBAAC,EAAD,CAAaA,cAAgBA,IAE7B,6BAGA,4BAGQ2C,EAAWnB,KAAK,SAAAT,GAAQ,OACvB,kBAAC,EAAD,CACAA,SAAUA,EACV0B,IAAK1B,UCpB1B6B,IAASC,OAAQ,kBAAC,EAAD,MAAkBC,SAASC,eAAe,U","file":"static/js/main.d58a445b.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\n\r\nexport const AddCategory = ({ setCategories }) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = ( e ) => {\r\n        setInputValue( e.target.value );       \r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n\r\n        e.preventDefault();\r\n        // console.log('Submit hecho')\r\n        if (inputValue.trim().length > 2){\r\n            setCategories( cats => [inputValue, ...cats ] );\r\n            setInputValue('');\r\n        }\r\n    }\r\n\r\n    return (\r\n\r\n        <form onSubmit={handleSubmit}>\r\n            <input \r\n                type=\"text\"\r\n                value={ inputValue }\r\n                onChange={ handleInputChange }\r\n            />\r\n        </form>\r\n\r\n\r\n    )\r\n};\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n};\r\n\r\n","\r\n\r\n\r\nexport const getGifs = async( category ) => {\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category)}&limit=10&api_key=DoAsjJhmJhypa7JqXKtajXAJp05nFNu6`;\r\n    const resp = await fetch( url );\r\n    const { data } = await resp.json();\r\n\r\n    const gifs = data.map( img  => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n\r\n    return gifs;\r\n}","import React from 'react';\r\n\r\n\r\nexport const GifGridItem = ( {title,url} ) => {\r\n\r\n    // console.log(id,title,url);\r\n\r\n\r\n    return(\r\n        <div className=\"card animate__animated animate__bounce\">\r\n            <img src={url} alt={title} />\r\n            <p>{title}</p>\r\n        </div>\r\n\r\n\r\n    )\r\n\r\n\r\n\r\n}","import React from 'react';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n\r\n    const { data:images, loading } = useFetchGifs( category );\r\n   \r\n    return(\r\n        <>\r\n            <h3 className=\"animate__animated animate__bounce\"> { category } </h3>\r\n\r\n            { loading && <p className=\"animate__animated flash\">Loading...</p>}\r\n\r\n            <div className=\"card-grid\">   \r\n                {\r\n                    images.map( img => (\r\n                        <GifGridItem \r\n                        {...img }\r\n                        key={img.id}\r\n                         />\r\n                    ))                    \r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}","import { useEffect, useState } from \"react\"\r\nimport {getGifs} from '../helpers/getGifs' \r\n\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading:true\r\n    });\r\n\r\n    useEffect( () => {\r\n\r\n        getGifs( category )\r\n\r\n            .then( img => {\r\n\r\n                setState({\r\n                    data: img,\r\n                    loading:false\r\n                });\r\n\r\n            })\r\n\r\n    },[category])\r\n\r\n\r\n    return state //{data[], loadgin:true};\r\n    \r\n}\r\n\r\n\r\n","import React, {useState} from 'react';\r\nimport {AddCategory} from './components/AddCategory'\r\nimport {GifGrid} from './components/GifGrid'\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n    const [categories, setCategories] = useState(['One Punch'])\r\n\r\n    // const handleAdd = () => {\r\n    //     // setCategories( [...categories, 'HunterxHunter'] );\r\n    //     setCategories( cats => [...cats, 'Hunter X Hunter'] )\r\n    // }\r\n\r\n    return (\r\n        <>\r\n            <h2>Gif Expert App</h2>\r\n\r\n            <AddCategory setCategories={ setCategories } />\r\n\r\n            <hr />\r\n\r\n\r\n            <ol>\r\n\r\n                { \r\n                    categories.map( category =>\r\n                     <GifGrid \r\n                     category={category}\r\n                     key={category}\r\n                      />\r\n                )}\r\n\r\n            </ol>\r\n\r\n\r\n        </>\r\n    )\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {GifExpertApp} from './GifExpertApp' \n\n\n\n\nReactDOM.render( <GifExpertApp />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\n"],"sourceRoot":""}